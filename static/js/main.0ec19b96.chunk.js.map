{"version":3,"sources":["store.js","reducers.js","types.js","components/Header/Header.js","parser.js","components/ExpressionField/ExpressionField.js","components/ExpressionDisplay/ExpressionDisplay.js","components/Variable/Variable.js","components/VariablesList/VariablesList.js","propagation.js","components/Result/Result.js","containers/App.js","actions.js","serviceWorker.js","index.js"],"names":["logger","createLogger","rootReducer","combineReducers","setExpressionField","state","action","type","payload","setVariables","newVariables","filter","variable","includes","diff","_","difference","map","variableName","modifyResult","total","uncertainty","rmse","store","createStore","applyMiddleware","thunkMiddleware","Header","className","defaultProps","mathWordsASCII","greekLettersASCII","constantGetterFromASCIIMath","expression","toReturn","forEach","word","replace","RegExp","greekVariables","letter","match","length","push","latinVariables","split","item","pos","self","indexOf","ExpressionField","expressionChangeFunction","variablesChangeFunction","aria-label","placeholder","onChange","event","target","value","asciimath2latex","require","ExpressionDisplay","expressionString","latexExpression","Variable","name","variableModified","id","aria-describedby","e","VariablesList","variablesList","variableModifiedFunction","variablesArray","i","key","cellSpacing","getResult","variables","prevResult","scope","derived","uncertainty_for_RMSE","uncertainty_for_propagation","evaluation","currentValue","derivative","evaluate","Infinity","im","Error","parseFloat","Math","pow","error","console","log","sqrt","message","Result","prevResultDic","calculateResultFunction","onClick","App","this","props","onExpressionChange","onVariablesChange","onVariableModified","onCalculateResult","result","Component","connect","dispatch","updatedVariablesList","modifiedVariable","calculateResult","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0ec19b96.chunk.js","sourcesContent":["/* createStore allows us to create a store with a given reducer and a middleware*/\n/* combineReducers is used when an application has multiple reducers */\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { setExpressionField, setVariables, modifyResult } from './reducers'\n/* createLogger allows us to control the redux actions in the console */\nimport { createLogger } from 'redux-logger';\n// thunkMiddleware allows us to control  redux Async actions and manage them\nimport thunkMiddleware from 'redux-thunk';\n\n/* intance of the logger */\nconst logger = createLogger();\n// in order to use multiple reducers we have to create a rootReducer by calling combineReducers function\n\nconst rootReducer = combineReducers({ \n    setExpressionField, \n    setVariables,\n    modifyResult });\n\n// The store A.K.A. the state of the app is declared with the root reducer, and as\n// an optional second parameter we can pass a middleware, to keep track of the actions\nexport const store = createStore(rootReducer,  applyMiddleware(thunkMiddleware,logger));","import {\n    EXPRESSION_FIELD_CHANGED,\n    VARIABLES_CHARGED,\n    VARIABLE_MODIFIED,\n    RESULT_CALCULATED,\n} from \"./types\"\n\nimport _ from 'lodash';\n\nexport const setExpressionField = ( state = '', action = {}) => {\n    switch(action.type){\n        case EXPRESSION_FIELD_CHANGED:\n            return action.payload;\n        default: \n            return state;\n    }\n}\nexport const setVariables = ( state = [], action = {}) => {\n    switch(action.type){\n        case VARIABLES_CHARGED:\n            const newVariables = [...state].filter( variable => action.payload.includes(variable[0]));\n            const diff = _.difference(action.payload, newVariables.map(variable => variable[0]));\n            return  [...newVariables, ...diff.map(variableName => [variableName,0,0])];\n        case VARIABLE_MODIFIED:\n            return state.map(variable => {\n                if (variable[0] === action.payload[0]){\n                    return action.payload;\n                } else {\n                    return variable;\n                }\n            })    \n        default:\n            return state;\n    }\n}\nexport const modifyResult = (state = {total: 0, uncertainty: 0, rmse: 0}, action = {}) => {\n    switch(action.type){\n        case RESULT_CALCULATED:\n            return {...state, ...action.payload};\n        default:\n            return state;\n    }\n}\n\n","export const EXPRESSION_FIELD_CHANGED = 'EXPRESSION_FIELD_CHANGED';\nexport const VARIABLES_CHARGED = 'VARIABLES_CHARGED';\nexport const VARIABLE_MODIFIED = 'VARIABLE_MODIFIED';\nexport const RESULT_CALCULATED = 'RESULT_CALCULATED';","import React from 'react';\n\n\nconst Header = () => {\n    return(\n        <nav className=\"bg-black-90 db dt-l w-100 border-box pa3 ph5-l\">\n            <div className=\"db dtc-l v-mid mid-gray dim w-100 w-25-l tc tl-l mb2 mb0-l\">\n                {/* <img src=\"http://tachyons.io/img/logo.jpg\" className=\"dib w2 h2 br-100\" alt=\"Site Name\"/> */}\n                <h3 className=\"light-gray dib mv2\">Calculadora de Propagación de Error</h3>\n            </div>\n        </nav>\n    );\n};\n\nHeader.propTypes = {\n};\n  \nHeader.defaultProps = {\n};\n\nexport default Header;","const mathWordsASCII = ['twoheadrightarrowtail','twoheadrightarrow','backslashsetminus',\n'rightarrowtail','leftrightarrow','Leftrightarrow','underbrace','rightarrow','Rightarrow',\n'underline','therefore','overbrace','leftarrow','downarrow','Leftarrow','underset','triangle',\n'supseteq','subseteq','rceiling','overline','lceiling','emptyset','bidwedge','|ldots|',\n'uparrow','partial','overset','overset','implies','diamond','because','ubrace','supset',\n'succeq','subset','square','rtimes','rfloor','rangle','propto','preceq','otimes','obrace',\n'models','mapsto','ltimes','lfloor','langle','forall','exists','cancel','bowtie','bigvee',\n'bigcup','bigcap','approx','arcsin','arccos','arctan','wedge','vdots','vdash','times','oplus','notin','nabla','infty',\n'frown','floor','equiv','ddots','ddot ','color','cdots','angle','sinh','cosh','tanh','sech','csch',\n'coth','exp','log','det','dim','aleph','uarr','text','succ','star','sqrt','root','rarr','rArr','quad','prod','prec'\n,'oint','odot','norm','larr','lArr','harr','hArr','grad','frac','darr','cong','circ','ceil','cdot','mod','gcd','lcm',\n'lub','glb','min','max','vvv','vee','vec','uuu','top','sum','not','nnn','neg','int','iff','hat','dot','div','del','cup',\n'cap','bot','bb','bar','ast','and','abs','sin','cos','tan','cot','sec','csc','CC','RR','NN','QQ','ZZ','xx','vv','uu',\n'ul','tt','to','sf','pm','pi','ox','or','oo','o.','o+','nn','ne','lt','le','in','ln','gt','ge','fr','cc','bbb','al','Pi',\n'O/','~','}','|','{','_','^','T','@','>','=','<','9','8','7','6','5','4','3','2','1','0','/','-','-','\"'\n];\n\nconst greekLettersASCII = ['alpha','beta','gamma','Gamma',\n    'delta','epsilon','varepsilon','zeta','theta',\n    'Theta','vartheta','iota','kappa','lambda','Lambda',\n    'mu','nu','xi','Xi','rho','sigma','Sigma',\n    'tau','upsilon','phi','Phi','varphi','chi','psi',\n    'Psi','omega','Omega'\n]\n\n/*Following function will receive an espression \nand return an array with the variables*/\nconst constantGetterFromASCIIMath = (expression) => {\n    let toReturn = expression;\n    mathWordsASCII.forEach(word => toReturn = toReturn.replace(new RegExp(word,'g'),''));\n    const greekVariables = [];\n    greekLettersASCII.forEach(letter => {\n        if((toReturn.match(new RegExp(letter,'g')) || []).length){\n            greekVariables.push(letter);\n            toReturn = toReturn.replace(new RegExp(letter,'g'),'');\n        }\n    });\n    const latinVariables = toReturn.replace(/[^A-Za-z]/g, '').split('').filter((item, pos, self) => {return self.indexOf(item) === pos;})\n    return [...greekVariables,...latinVariables]\n};\n\nexport default constantGetterFromASCIIMath;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport constantGetterFromASCIIMath from '../../parser';\n\nconst ExpressionField = ({expressionChangeFunction, variablesChangeFunction}) => {\n    return (\n        <div className=\"pa2 mt4\">\n            <input\n                aria-label = 'Write Expression'\n                className = 'pa3 ba b--black bg-lightest-blue' \n                type='search' \n                placeholder='Escriba acá la expresión'\n                onChange = {function(event){ expressionChangeFunction(event); variablesChangeFunction(constantGetterFromASCIIMath(event.target.value))}}/>\n        </div>\n        \n\n    );\n};\n\nExpressionField.propTypes = {\n    /**\n     * This function is subscribed everytime the user change the value on the input. It is useful to change the current value on the expression display\n     */\n    expressionChangeFunction: PropTypes.func,\n    /**\n     * This function is subscribed everytime the user change the value on the input. It is useful to change the current list of variables.\n     */\n    variablesChangeFunction: PropTypes.func,\n  };\n  \nExpressionField.defaultProps = {\n    expressionChangeFunction: null,\n    variablesChangeFunction: null,\n};\n  \n\nexport default ExpressionField; ","import React from 'react';\nimport 'katex/dist/katex.min.css';\nimport { BlockMath } from 'react-katex';\n\nconst asciimath2latex = require('asciimath-to-latex')\n\nconst convertAsciimath2Latex = (asciimath) =>{\n    const latex = asciimath2latex(asciimath)\n    return latex;\n}\n\nconst ExpressionDisplay = ({expressionString}) => {\n    const latexExpression = convertAsciimath2Latex(expressionString);\n    return (\n        <div className=\"pa2 w-100 mt4\">\n            <article className=\"center mw5 mw6-ns hidden ba\">\n                <h1 className=\"f4 bg-near-black white mv0 pv2 ph3\">{\"Expresión\"}</h1>\n                <div className=\"pa3 bt overflow-x-scroll overflow-y-hidden\">\n                    <BlockMath>{latexExpression}</BlockMath>\n                </div>\n            </article>\n\n        </div>\n        \n\n    );\n}\n\nexport default ExpressionDisplay; ","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Variable = ({ name, value, uncertainty, variableModified}) => {\n    return(\n        <tr>\n            <td className=\"pv3 pr3 bb b--black-20 tc georgia i\">\n               {name}\n            </td>\n            <td className=\"pv3 pr3 bb b--black-20\">\n                <input id=\"value\" className=\"input-reset ba b--black-20 pa2 db w-100\" \n                type=\"tel\" \n                placeholder={value}\n                aria-describedby=\"value\"\n                onChange = {(e)=>variableModified([name, e.target.value, uncertainty])}/>\n            </td>\n            <td className=\"pv3 pr3 bb b--black-20\">\n                <input id=\"uncertainty\" className=\"input-reset ba b--black-20 pa2 db w-100\" \n                type=\"tel\" \n                aria-describedby=\"uncertainty\" \n                placeholder={uncertainty}\n                onChange = {(e)=>variableModified([name, value, e.target.value])}/>\n            </td>\n        </tr>\n    );\n}\n\nVariable.propTypes = {\n    /**\n     * Name of the variable\n     */\n     name: PropTypes.string,\n    /**\n     * Value of the variable\n     */\n     value: PropTypes.string,\n    /**\n     * Uncertainty of the variable\n     */\n    uncertainty: PropTypes.string,\n    /**\n    * This function is subscribed everytime the user change any value on the variable. \n    */\n    variableModified: PropTypes.func,\n  };\n  \n  Variable.defaultProps = {\n    name: null,\n    value: null,\n    uncertainty: null, \n    variableModified: null,\n};\n\nexport default Variable;","import React from 'react';\nimport Variable from '../Variable/Variable';\n\nconst VariablesList = ({variablesList, variableModifiedFunction}) => {\n    const variablesArray = variablesList.map((variable, i) =>{\n        return (\n            <Variable\n                key ={i}\n                name = {variable[0]}\n                value = {variable[1]}\n                uncertainty = {variable[2]}\n                variableModified = {variableModifiedFunction}\n            />\n        );\n    });\n    return(\n        <div className=\"pa2 vh-50 overflow-auto\">\n            <div className=\"overflow-auto\">\n                <table className=\"f6 w-100 mw8 center\" cellSpacing=\"0\">\n                    <thead>\n                        <tr>\n                            <th className=\"fw6 bb b--black-20 tc pb2 pr4 bg-white\">Nombre</th>\n                            <th className=\"fw6 bb b--black-20 tc pb2 pr4 bg-white\">Valor</th>\n                            <th className=\"fw6 bb b--black-20 tc pb2 pr4 bg-white\">Incertidumbre</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"lh-copy\">\n                        {variablesArray}                        \n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default VariablesList;","import { derivative,evaluate} from 'mathjs'\n\nconst getResult = (expression, variables, prevResult) => {\n    let scope = {}\n    variables.map(i => scope={\n        ...scope,\n        [i[0]] : i[1]\n    })\n    let derived = 0;\n    let uncertainty_for_RMSE = 0;\n    let uncertainty_for_propagation = 0;\n    let evaluation = 0;\n    try{\n        variables.map(currentValue => {\n            derived = derivative(expression, currentValue[0])\n            try {\n                evaluation = derived.evaluate(scope);\n                if (evaluation === Infinity || evaluation.im){\n                    throw Error;\n                } else {\n                    uncertainty_for_propagation += parseFloat(evaluation*currentValue[2])\n                    uncertainty_for_RMSE += Math.pow(parseFloat(evaluation*currentValue[2]),2)\n                }\n            } catch(error) {\n                //handle a bad evaluation\n                console.log(error);\n                throw Error;\n            }\n            return currentValue;\n        });\n        \n        const result = {\n            total: evaluate(expression,scope),\n            uncertainty: uncertainty_for_propagation,\n            rmse: Math.sqrt(uncertainty_for_RMSE),\n        }\n        return result;\n    }\n    catch(error){\n        // handle a no derivable expression\n        console.log(error.message);\n        return {total: 0, uncertainty: 0};\n    }\n}\n\n\nexport default getResult;","import React from 'react';\nimport getResult from '../../propagation'\nimport PropTypes from 'prop-types';\n\nconst Result = ({ expressionString, variablesList, prevResultDic, calculateResultFunction}) => {\n    return(\n        <div className=\"pv2 ph3 flex flex-column justify-start items-center w-100\">\n            <input \n                onClick={(e) => calculateResultFunction(getResult(expressionString,variablesList,prevResultDic))} \n                className=\"f6 b br3 b--black ph3 pv2 input-reset ba bg-transparent grow pointer dib\" \n                type=\"submit\" \n                value=\"Calcular Resultado\"/>\n            <table className=\"pa3 f6 w-100 mw8 center\" cellSpacing=\"0\">\n                <tbody className=\"lh-copy\">   \n                    <tr>\n                        <td className=\"pv3 pr3 bb bt b--black-20 tc\">\n                             {'Resultado: ' + prevResultDic.total}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"pv3 pr3 bb b--black-20 tc\">\n                            \n                            {'Propagación de error: ' + prevResultDic.uncertainty} \n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"pv3 pr3 bb b--black-20 tc\">\n                            \n                            {'RSME: ' + prevResultDic.rmse} \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            \n            \n        </div>\n    );\n}\n\nResult.propTypes = {\n    /**\n    * Expression submitted by the user\n    */\n    expressionString: PropTypes.string,\n    /**\n    * List of tuples of the following structure: (<Variable Name>, <Variable Value>, <Variable Uncertainty>) \n    */\n    variablesList: PropTypes.object,\n    /**\n    * Dictionary of the following structure: {<Result>, <Uncertainty>, <RMSE>}\n    */\n    prevResultDic: PropTypes.object,\n    /**\n    * This function is subscribed everytime the user change any value on the variable. \n    */\n    calculateResultFunction: PropTypes.func,\n  };\n  \nResult.defaultProps = {\n    expressionString: null,\n    variablesList: null,\n    prevResultDic: null,\n    calculateResultFunction: null,\n};\n  \n\nexport default Result;","import React, { Component } from 'react';\n\nimport Header from '../components/Header/Header';\nimport ExpressionField from '../components/ExpressionField/ExpressionField';\nimport ExpressionDisplay from '../components/ExpressionDisplay/ExpressionDisplay';\nimport VariablesList from '../components/VariablesList/VariablesList';\nimport Result from '../components/Result/Result';\n\nimport { connect } from 'react-redux';\nimport { changeExpressionField, chargeVariables, modifyVariable, calculateResult} from '../actions';\n\n\n// App.js inherits the state object provided by Provider in index.js this is implicit \n// in the call to mapStateProps in the bottom line of this file\nconst mapStateToProps = (state) => {\n  console.log('state bayyy', state);\n  \n  return {\n      expression:  state.setExpressionField,\n      variables: state.setVariables,\n      result: state.modifyResult\n  }\n}\n// App.js inherits the dispatch provided by Provider in index.js due to the redux implementation\n// this is implicit in the call to mapDispatchToProps in the bottom line of this file\n// in this function we return the functions that contain the actions within them\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      onExpressionChange: (event) => dispatch(changeExpressionField(event.target.value)),\n      onVariablesChange: (updatedVariablesList) => dispatch(chargeVariables(updatedVariablesList)), \n      onVariableModified: (modifiedVariable) => dispatch(modifyVariable(modifiedVariable)),\n      onCalculateResult: (result) => dispatch(calculateResult(result))\n  }\n}\n\n\nclass App extends Component {\n  render(){\n    const { \n      onExpressionChange,\n      onVariablesChange,\n      onVariableModified,\n      onCalculateResult,\n      expression,\n      variables,\n      result\n    } = this.props;\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"flex flex-row flex-wrap justify-around items-start\">\n          <div className=\"pa2 flex flex-column justify-start items-center\">\n            <p className=\"dim black dib ma0 f4-ns pa2\"></p>\n            <ExpressionField expressionChangeFunction={onExpressionChange} variablesChangeFunction={onVariablesChange}/>\n            <ExpressionDisplay expressionString={expression}/>\n          </div>\n          <div className=\"pa2 flex flex-column justify-start items-center\">\n            <p className=\"dim black dib ma0 f4-ns pa2\">Variables</p>\n            <VariablesList variablesList={variables} variableModifiedFunction={onVariableModified}/>  \n          </div>\n        </div>\n        <div className=\"flex flex-row justify-center items-center\">\n        <Result expressionString={expression} variablesList={variables} prevResultDic={result} calculateResultFunction={onCalculateResult} ></Result>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n    EXPRESSION_FIELD_CHANGED,\n    VARIABLES_CHARGED,\n    VARIABLE_MODIFIED,\n    RESULT_CALCULATED,\n} from \"./types\"\n\nexport const changeExpressionField = (expressionText) => {\n    return {\n        type: EXPRESSION_FIELD_CHANGED,\n        payload: expressionText\n    }\n};\n\n// variablesArray has arrays of each variables, [['x', 2, 0.0002],['y', 10, 0.05]] \nexport const chargeVariables = (variablesArray) => {\n    return {\n        type: VARIABLES_CHARGED,\n        payload: variablesArray\n    }\n}\n\n// variables is an array with structure ['name', value, uncertainty]\nexport const modifyVariable = (variable) => {\n    return {\n        type: VARIABLE_MODIFIED,\n        payload: variable\n    }\n}\n\nexport const calculateResult = (result) => {\n    return {\n        type: RESULT_CALCULATED,\n        payload: result\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/* Provider allows us to englobe App Container and pass down props in a redux model */\nimport { Provider } from 'react-redux';\n\nimport {store} from './store';\n\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\n/* wrapping the App within the Provider component passes down the store in all the other components contained in the App Component */\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}